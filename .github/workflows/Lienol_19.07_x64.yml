  
#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================
name: Lienol_19.07_x64

on: 
  release:
    types: [published]

  push:
  #  branches: 
  #    - master
      paths:
      - '.github/workflows/Lienol_19.07_x64.yml'
      - 'Lienol_19.07_x64.config'
  #schedule:
  #  - cron: 0 8 * * 5
  
  watch:
    types: [started]

env:
  REPO_URL: https://github.com/Lienol/openwrt
  REPO_BRANCH: dev-19.07
  CONFIG_FILE: Lienol_19.07_x64.config
  DIY_SH: customize.sh
  SSH_ACTIONS: true
  UPLOAD_IPK: true
  UPLOAD_FIRMWARE_ALL: true
  UPLOAD_FIRMWARE_UEFI: true
  UPLOAD_FIRMWARE_COMBINED: true
  UPLOAD_COWTRANSFER: true
  TZ: Asia/Shanghai
  
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    
    steps:
    - uses: actions/checkout@v1
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
    - name: Clone source code
      run: |        
         git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
         cd openwrt/package/lean
         git clone https://github.com/ycg31/luci-app-koolproxy
         git clone https://github.com/frainzy1477/luci-app-clash
         git clone https://github.com/vernesong/OpenClash
         git clone https://github.com/Leo-Jo-My/luci-theme-Butterfly
         git clone https://github.com/Leo-Jo-My/luci-theme-opentomato
         git clone https://github.com/Leo-Jo-My/luci-theme-opentomcat
         git clone https://github.com/ycg31/luci-app-vssr
         git clone -b lean  https://github.com/Sweet-Fairy/luci-app-ssr-plus-Jo luci-app-ssr-plus-lean
         git clone https://github.com/siwind/luci-app-ttyd
         git clone https://github.com/tsl0922/ttyd
         git clone https://github.com/ycg31/my
         rm    -rfv  my/openwrt-dnsforwarder
         rm    -rfv  my/openwrt-simple-obfs
         rm    -rfv  my/openwrt-v2ray-plugin
    
#    - name: Add feeds
#      run: |
#       cd openwrt
#        sed -i '5a src-git lean https://github.com/coolsnowwolf/packages' feeds.conf.default
       
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a
 
#    - name: Del feeds
#      run: |
#        rm -rf ./openwrt/feeds/lean/net/rp-pppoe
#        rm -rf ./openwrt/feeds/lean/net/pptpd
        
    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a
    
    - name: Configuration Customization
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./$DIY_SH && ./$DIY_SH
        cd openwrt && make defconfig
 
    - name: Setup Debug Session
      env:
       SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
      uses: tete1030/safe-debugger-action@master
      if: env.SSH_ACTIONS == 'true'
    
    - name: Make download
      run: |
          cd openwrt
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
    - name: Multi-thread compile
      run: |
          cd openwrt
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s
    - name: Single-thread compile
      if: failure()
      run: |
          cd openwrt
          make -j1 V=s
    - name: Assemble combined
      run: |
          rm -rf ./combined/
          mkdir -p ./combined/
          find openwrt/bin/targets/ -name "*sysupgrade*bin*" | xargs -i cp -f {} ./combined/
          find openwrt/bin/targets/ -name "*combined*img*" | xargs -i cp -f {} ./combined/
          find openwrt/bin/targets/ -name "*config*" | xargs -i cp -f {} ./combined/
     
    - name: Assemble firmware
      run: |
          rm -rf ./firmware/
          mkdir -p ./firmware/
          find openwrt/bin/targets/ -name "*sysupgrade*bin*" | xargs -i cp -f {} ./firmware/
          find openwrt/bin/targets/ -name "*combined*img*" | xargs -i cp -f {} ./firmware/
          find openwrt/bin/targets/ -name "*uefi*img*" | xargs -i cp -f {} ./firmware/
          find openwrt/bin/targets/ -name "*config*" | xargs -i cp -f {} ./firmware/         
    - name: Assemble uefi
      run: |
          rm -rf ./uefi/
          mkdir -p ./uefi/
          find openwrt/bin/targets/ -name "*sysupgrade*bin*" | xargs -i cp -f {} ./uefi/
          find openwrt/bin/targets/ -name "*uefi*img*" | xargs -i cp -f {} ./uefi/
          find openwrt/bin/targets/ -name "*config*" | xargs -i cp -f {} ./uefi/
    
    - name: Get Date
      run: echo "::set-env name=DATE::$(TZ=':Asia/Shanghai' date '+%Y-%m-%d %H%M')"
    
    - name: Prepare artifact
      run: find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}
    
    - name: Upload artifact
      uses: actions/upload-artifact@master
      if: env.UPLOAD_FIRMWARE_UEFI == 'true'
      with:
        name: ${{env.DATE}} OpenWrt Lienol_19.07_uefi
        path: ./uefi/
    - name: Upload artifact
      uses: actions/upload-artifact@master
      if: env.UPLOAD_FIRMWARE_COMBINED == 'true'
      with:
        name: ${{env.DATE}} OpenWrt Lienol_19.07_combined
        path: ./combined/

    - name: Upload firmware
      uses: actions/upload-artifact@master
      if: env.UPLOAD_FIRMWARE_ALL == 'true'
      with:
        name: ${{env.DATE}} OpenWrt_Lienol_19.07_firmware
        path: ./openwrt/bin/targets/
          
    - name: Upload  IPK
      uses: actions/upload-artifact@master
      if: env.UPLOAD_IPK == 'true'
      continue-on-error : true
      with:
        name: ${{env.DATE}} OpenWrt_Lienol_19.07_IPK
        path: ./openwrt/bin/packages/
        
    - name: Upload firmware to cowtransfer
      if: env.UPLOAD_COWTRANSFER == 'true'
      continue-on-error : true
      run: |
        curl -sL https://git.io/cowtransfer | sh
        ./cowtransfer-uploader -s -p 8 ./firmware/
    
    - name: Archive Release
      uses: thedoctor0/zip-release@master
      continue-on-error : true
      with:
        filename: '${{env.DATE}} OpenWrt_Lienol_19.07_firmware.zip'
        path: ./openwrt/bin/

    - name: Upload firmware to cowtransfer
      if: env.UPLOAD_COWTRANSFER == 'true'
      continue-on-error : true
      run: |
        mkdir yu
        cp ./firmware.zip ./yu/firmware.zip
        curl -sL https://git.io/cowtransfer | sh
        ./cowtransfer-uploader -s -p 8 ./yu/
    
    - name: upload to CODING 传到CODING
      continue-on-error : true
      run: |
        git config --global user.email "ycg31@qq.com"
        git config --global user.name "TzePUfjoaA"
        git clone --depth 1 https://TzePUfjoaA:${{ secrets.CODING_TOKEN }}@e.coding.net/ycg31/OpenWrt/openwrt_firmware rom
        mkdir -p rom/Lean_master/
        cp -rf ./openwrt/bin/* rom/Lean_master/
        cd rom
        git add . || echo "1"
        git commit -m "github_actions" -a;
        git push