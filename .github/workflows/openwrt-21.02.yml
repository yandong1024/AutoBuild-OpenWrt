#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: ycg31
#=================================================

name: OpenWrt-CI

on: 
  release:
    types: [published]

  push:
  #  branches: 
  #    - master
      paths:
      - '.github/workflows/openwrt-21.02.yml'
      - 'openwrt2102.config'
  #schedule:
  #  - cron: 0 8 * * 5
  
  watch:
    types: [started]

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-21.02
  CONFIG_FILE: openwrt2102.config
  DIY_SH: 22.sh
  SSH_ACTIONS: false
  UPLOAD_IPK: true
  UPLOAD_FIRMWARE_ALL: true
  UPLOAD_FIRMWARE_UEFI: true
  UPLOAD_FIRMWARE_COMBINED: true
  UPLOAD_COWTRANSFER: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Space cleanup
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig libtinfo5
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
        # ln -s /mnt/openwrt/bin ./bin
        # mkdir -p ./build_dir
        # ln -s -f /mnt/openwrt/build_dir/host ./build_dir/host
        # ln -s -f /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
        # ln -s /mnt/openwrt/dl ./dl
        # ln -s /mnt/openwrt/feeds ./feeds
        # ln -s /mnt/openwrt/staging_dir ./staging_dir
        df -h
    - name: Clone source code
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        sed -i '$a src-git kenzo https://github.com/kenzok8/openwrt-packages' feeds.conf.default
        sed -i '$a src-git small https://github.com/kenzok8/small' feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a
    - name: Import external feeds
      working-directory: ./openwrt/package/
      run: |
        git clone -b 21.02 https://github.com/kenzok78/luci-theme-argonne
        git clone https://github.com/thinktip/luci-theme-neobird
           
 #   - name: 删除冲突插件
 #     working-directory: ./openwrt/package/
 #     run: |
 #       rm -rvf openwrt-simple-obfs
 #       rm -rvf openwrt-v2ray-plugin
        
    - name: Configuration Customization 
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./$DIY_SH && ./$DIY_SH
        cd openwrt && make defconfig
    - name: Setup Debug Session
      env:
       SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
      uses: tete1030/safe-debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: Multi-thread compile
      run: |
          cd openwrt
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s
          
    - name: Single-thread compile
      if: failure()
      run: |
          cd openwrt
          make -j1 V=s
          
    - name: Assemble combined
      run: |
          rm -rf ./combined/
          mkdir -p ./combined/
          find openwrt/bin/targets/ -name "*sysupgrade*bin*" | xargs -i cp -f {} ./combined/
          find openwrt/bin/targets/ -name "*combined*img*" | xargs -i cp -f {} ./combined/
          find openwrt/bin/targets/ -name "*config*" | xargs -i cp -f {} ./combined/
          
    - name: Assemble uefi    
      run: |
          rm -rf ./uefi/
          mkdir -p ./uefi/
          find openwrt/bin/targets/ -name "*sysupgrade*bin*" | xargs -i cp -f {} ./uefi/
          find openwrt/bin/targets/ -name "*uefi*img*" | xargs -i cp -f {} ./uefi/
          find openwrt/bin/targets/ -name "*config*" | xargs -i cp -f {} ./uefi/  
    
    - name: Get Date
      run: echo "DATE=$(TZ=':Asia/Shanghai' date '+%Y%m%d-%H%M')" >> $GITHUB_ENV
    
    - name : Upload combined
      uses: actions/upload-artifact@master
      if: env.UPLOAD_FIRMWARE_COMBINED == 'true'
      with:
        name: ${{env.DATE}} OpenWrt_lean_combined
        path: ./combined/

    - name : Upload uefi
      uses: actions/upload-artifact@master
      if: env.UPLOAD_FIRMWARE_UEFI == 'true'
      with:
        name: ${{env.DATE}} OpenWrt_lean_uefi
        path: ./uefi/
   
    - name: Upload firmware
      uses: actions/upload-artifact@master
      if: env.UPLOAD_FIRMWARE_ALL == 'true'
      with:
        name: ${{env.DATE}} OpenWrt_lean_firmware
        path: ./openwrt/bin/targets/
          
    - name: Upload  IPK
      uses: actions/upload-artifact@master
      if: env.UPLOAD_IPK == 'true'
      with:
        name: ${{env.DATE}} OpenWrt_lean_IPK
        path: ./openwrt/bin/packages/

    - name: upload to CODING 传到CODING
      continue-on-error : true
      run: |
        git config --global user.email "ycg31@qq.com"
        git config --global user.name "TzePUfjoaA"
        git clone --depth 1 https://TzePUfjoaA:${{ secrets.CODING_TOKEN }}@e.coding.net/ycg31/OpenWrt/openwrt_firmware rom
        mkdir -p rom/Lean_master/
        cp -rf ./openwrt/bin/* rom/Lean_master/
        cd rom
        git add . || echo "1"
        git commit -m "github_actions" -a;
        git push
    
    - name: Archive Release
      uses: thedoctor0/zip-release@master
      with:
        filename: '${{env.DATE}}lean_firmware.zip'
        path: ./openwrt/bin/
    
    - name: Upload firmware to cowtransfer
      if: env.UPLOAD_COWTRANSFER == 'true'
      run: |
        curl -sL https://git.io/cowtransfer | sh
        ./cowtransfer-uploader -s -p 8 ./${{env.DATE}}lean_firmware.zip
