#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: ycg31
#=================================================

name: Lean_18.06_x64

on: 
  release:
    types: [published]

  push:
  #  branches: 
  #    - master
      paths:
      - '.github/workflows/Lean_18.06_x64.yml'
  #schedule:
  #  - cron: 0 8 * * 5
  
  watch:
    types: [started]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: Lean_18.06_x64.config
  DIY_SH: 222.sh
  SSH_ACTIONS: false
  UPLOAD_IPK: true
  UPLOAD_FIRMWARE_ALL: true
  UPLOAD_FIRMWARE_UEFI: true
  UPLOAD_FIRMWARE_COMBINED: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex node-uglify gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler libuv-dev
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        sed -i '1a src-git lienol https://github.com/Lienol/openwrt-package' feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a

    - name: Import external feeds
      working-directory: ./openwrt/package/lean
      run: |
           git clone https://github.com/jerrykuku/lua-maxminddb.git 
           git clone https://github.com/ycg31/luci-app-koolproxyR.git
           git clone https://github.com/frainzy1477/luci-app-clash.git
           git clone https://github.com/vernesong/OpenClash.git
           git clone https://github.com/Leo-Jo-My/luci-theme-Butterfly
           git clone https://github.com/Leo-Jo-My/luci-theme-Butterfly-dark
           git clone https://github.com/Leo-Jo-My/luci-theme-opentomato
           git clone https://github.com/Leo-Jo-My/luci-theme-opentomcat
           
    - name: Configuration Customization - Build_x86_64
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./$DIY_SH && ./$DIY_SH
        cd openwrt && make defconfig

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true' 

    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Multi-thread compile
      run: |
          cd openwrt
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s
          
    - name: Single-thread compile
      if: failure()
      run: |
          cd openwrt
          make -j1 V=s
          
    - name: Assemble combined
      run: |
          rm -rf ./combined/
          mkdir -p ./combined/
          find openwrt/bin/targets/ -name "*sysupgrade*bin*" | xargs -i cp -f {} ./combined/
          find openwrt/bin/targets/ -name "*combined*img*" | xargs -i cp -f {} ./combined/
          find openwrt/bin/targets/ -name "*config*" | xargs -i cp -f {} ./combined/
          
    - name: Assemble uefi    
      run: |
          rm -rf ./uefi/
          mkdir -p ./uefi/
          find openwrt/bin/targets/ -name "*sysupgrade*bin*" | xargs -i cp -f {} ./uefi/
          find openwrt/bin/targets/ -name "*uefi*img*" | xargs -i cp -f {} ./uefi/
          find openwrt/bin/targets/ -name "*config*" | xargs -i cp -f {} ./uefi/  
    
    - name : Upload uefi
      uses: actions/upload-artifact@master
      if: env.UPLOAD_FIRMWARE_COMBINED == 'true'
      with:
        name: OpenWrt_lean_combined
        path: ./combined/

    - name : Upload uefi
      uses: actions/upload-artifact@master
      if: env.UPLOAD_FIRMWARE_UEFI == 'true'
      with:
        name: OpenWrt_lean_uefi
        path: ./uefi/
   
    - name: Upload firmware
      uses: actions/upload-artifact@master
      if: env.UPLOAD_FIRMWARE_ALL == 'true'
      with:
        name: OpenWrt_lean_firmware
        path: ./openwrt/bin/targets/
          
    - name: Upload  IPK
      uses: actions/upload-artifact@master
      if: env.UPLOAD_IPK == 'true'
      with:
        name: OpenWrt_lean_IPK
        path: ./openwrt/bin/packages/
